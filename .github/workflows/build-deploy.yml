name: Build and Deploy Code # Even we have file name, you can still add name which is description to this file

on: [push, pull_request] # when to trigger this workflow push: push code, pull: pull request happended
  # This is example if you want a granular trigger
  # push: 
  #   branches: # trigger when specific branches
  #     - "main"
  #     - "anotherbranch"
  # pull_request:
  #   branches: 
  #     - "test_branch"

# env:  # environment variables that share in all jobs
#   global_env_variable: global_variable

jobs: 
  job1:
    environment:
      name: Postgres database
    env: # this env is only for specific job workflow
      # hardcode environemental variables firstly,
      # First Method: we go to Settings => Secrets(Actions) => add repo secrets (This repo can access all these env vars)
      # Second Method: Settings => Environments => New environment => the job workflow in .yml, add environment:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}} # actually no localhost database in this machine, you must install DB server or point to remote DB created in advanced
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    services:
      postgres:
        image: postgres 
        env: 
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test1
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        options: >-   # remember no space under >-, you will get error constantly till you crazy...
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest # machine that the job will run on
    steps:
      - name:  pulling git repo # description for each steps 
        uses: actions/checkout@v2
      - name: say hi to mars
        run: echo "hello Mars" # run script on your machine
      - name: Install Python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: import all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest # get env var error cuz database need all info to test code
        run: |
          pip install pytest
          pytest tests/
